{"version":3,"sources":["address.js","ForwardApp.js","ReverseApp.js","App.js","index.js"],"names":["list","require","ForwardApp","useState","input","setInput","utf8Bytes","utf8","encode","ipList","length","match","map","s","padEnd","c","charCodeAt","className","value","onChange","e","target","placeholder","toString","padStart","join","ip","i","ipv4","assignment","byte","prefix","find","item","Prefix","findAssignment","Status","Designation","href","rel","ReverseApp","useEffect","fetch","then","r","json","d","bytes","text","parts","split","p","parseInt","every","b","parseIPv4","isValid","codePointString","String","fromCodePoint","utf8String","decode","App","mode","setMode","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"46zCAAMA,EAAOC,EAAQ,I,WCKN,SAASC,IACtB,MAA4BC,mBAAS,IAArC,mBAAQC,EAAR,KAAeC,EAAf,KAEMC,EAAYC,IAAKC,OAAOJ,GAE1BK,EAASL,EAAMM,OAAS,EAAIJ,EAAUK,MAAM,WAAWC,KAAI,SAAAC,GAAC,OAAI,YAAIA,EAAEC,OAAO,EAAE,OAAOF,KAAI,SAAAG,GAAC,OAAIA,EAAEC,WAAW,SAAO,GAEvH,OACE,sBAAKC,UAAU,MAAf,UACE,uBAAOA,UAAU,aAAaC,MAAOd,EAAOe,SAAU,SAAAC,GAAC,OAAIf,EAASe,EAAEC,OAAOH,QAAQI,YAAY,0BACjG,mBAAGL,UAAU,WAAb,SAAyB,YAAIX,GAAWM,KAAI,SAAAG,GAAC,OAAIA,EAAEC,WAAW,GAAGO,SAAS,IAAIC,SAAS,EAAG,QAAMC,KAAK,OAEnGhB,EAAOG,KAAI,SAACc,EAAIC,GACd,IAAMC,EAAI,UAAMF,EAAG,GAAT,YAAeA,EAAG,GAAlB,YAAwBA,EAAG,GAA3B,YAAiCA,EAAG,IACxCG,EDbT,SAAyBC,GAC5B,IAAMC,EAAM,UAAMD,EAAKP,WAAWC,SAAS,EAAE,KAAjC,MAEZ,OAAOxB,EAAKgC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,SAAWH,KCUhBI,CAAeT,EAAG,IAErC,OACE,sBAAaT,UAAU,UAAvB,UACE,mBAAGA,UAAU,YAAb,SAA0BW,IAC1B,oBAAGX,UAAU,SAAb,UAAuBY,EAAWO,OAAlC,MAA6CP,EAAWQ,eACxD,mBAAGpB,UAAU,SAAb,SAAsB,mBAAGqB,KAAI,4BAAuBV,GAAQP,OAAO,SAASkB,IAAI,aAA1D,wBAHdZ,SClBP,SAASa,IACtB,MAA4BrC,mBAAS,IAArC,mBAAQC,EAAR,KAAeC,EAAf,KAEAoC,qBAAU,WACRC,MAAM,+BAA+BC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAAK,SAAAG,GAC5DzC,GAAS,SAAAD,GACP,MAAc,KAAVA,EACK0C,EAAEpB,GAEJtB,UAGV,IAEH,IAAM2C,EAwCR,SAAoBC,GAClB,GAAoB,kBAATA,EAAmB,OAAO,KAErC,IAAMC,EAAQD,EAAKE,MAAM,KAEzB,GAAqB,IAAjBD,EAAMvC,OAAc,OAAO,KAE/B,IAAMqC,EAAQE,EAAMrC,KAAI,SAAAuC,GAAC,OAAIC,SAASD,MAEtC,OAAKJ,EAAMM,OAAM,SAAAC,GAAC,OAAIA,GAAK,GAAKA,EAAI,OAE7BP,EAF0C,KAjDnCQ,CAAUnD,GAElBoD,EAAoB,OAAVT,EAEVU,EAAkBD,GAAWE,OAAOC,cAAP,MAAAD,OAAM,YAAkBX,IAEvDa,EAAa,KAEjB,GAAIJ,EACF,IACEI,EAAarD,IAAKsD,OAAOJ,GACzB,MAAOrC,IAGX,OACE,sBAAKH,UAAU,MAAf,UACE,uBAAOA,UAAU,aAAaC,MAAOd,EAAOe,SAAU,SAAAC,GAAC,OAAIf,EAASe,EAAEC,OAAOH,QAAQI,YAAY,0BAE/FmC,GACE,sBAAKxC,UAAU,UAAf,UACE,mBAAGA,UAAU,YAAb,SAA0BwC,IAC1B,mBAAGxC,UAAU,SAAb,4BAIJ2C,GACE,sBAAK3C,UAAU,UAAf,UACE,mBAAGA,UAAU,YAAb,SAA0B2C,IAC1B,mBAAG3C,UAAU,SAAb,gCCrBG6C,MApBf,WACE,MAA0B3D,mBAAS,WAAnC,mBAAQ4D,EAAR,KAAcC,EAAd,KAEA,MAAa,YAATD,EAEA,gCACE,cAAC7D,EAAD,IACA,wBAAQe,UAAU,aAAagD,QAAS,kBAAMD,EAAQ,YAAtD,6BAKF,gCACE,cAACxB,EAAD,IACA,wBAAQvB,UAAU,aAAagD,QAAS,kBAAMD,EAAQ,YAAtD,8BCdRE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.bb77b753.chunk.js","sourcesContent":["const list = require('./ipv4-address-space.json');\r\n\r\n/**\r\n *\r\n * @param {number} byte\r\n */\r\nexport function findAssignment (byte) {\r\n    const prefix = `${byte.toString().padStart(3,\"0\")}/8`;\r\n\r\n    return list.find(item => item.Prefix === prefix);\r\n}","import { useState } from 'react';\nimport utf8 from 'utf8';\nimport './App.css';\nimport { findAssignment } from './address';\n\nexport default function ForwardApp() {\n  const [ input, setInput ] = useState(\"\");\n\n  const utf8Bytes = utf8.encode(input);\n\n  let ipList = input.length > 0 ? utf8Bytes.match(/.{1,4}/g).map(s => [...s.padEnd(4,\"\\0\")].map(c => c.charCodeAt(0))) : [];\n\n  return (\n    <div className=\"App\">\n      <input className=\"EmojiInput\" value={input} onChange={e => setInput(e.target.value)} placeholder=\"Enter some characters\" />\n      <p className=\"ByteList\">{[...utf8Bytes].map(c => c.charCodeAt(0).toString(16).padStart(2, \"0\")).join(\" \")}</p>\n      {\n        ipList.map((ip, i) => {\n          const ipv4 = `${ip[0]}.${ip[1]}.${ip[2]}.${ip[3]}`;\n          const assignment = findAssignment(ip[0]);\n\n          return (\n            <div key={i} className=\"IPEntry\">\n              <p className=\"IPAddress\">{ipv4}</p>\n              <p className=\"Status\">{assignment.Status} - {assignment.Designation}</p>\n              <p className=\"Lookup\"><a href={`https://db-ip.com/${ipv4}`} target=\"_blank\" rel=\"noreferrer\">Lookup</a></p>\n            </div>\n          );\n        })\n      }\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport utf8 from 'utf8';\nimport './App.css';\n\nexport default function ReverseApp() {\n  const [ input, setInput ] = useState(\"\");\n\n  useEffect(() => {\n    fetch(`https://freegeoip.app/json/`).then(r => r.json()).then(d => {\n      setInput(input => {\n        if (input === \"\") {\n          return d.ip;\n        }\n        return input;\n      });\n    });\n  }, []);\n\n  const bytes = parseIPv4(input);\n\n  const isValid = bytes !== null;\n\n  const codePointString = isValid && String.fromCodePoint(...bytes);\n\n  let utf8String = null;\n\n  if (isValid) {\n    try {\n      utf8String = utf8.decode(codePointString);\n    } catch (e) {}\n  }\n\n  return (\n    <div className=\"App\">\n      <input className=\"EmojiInput\" value={input} onChange={e => setInput(e.target.value)} placeholder=\"Enter an IPv4 address\" />\n      {\n        codePointString &&\n          <div className=\"IPEntry\">\n            <p className=\"IPAddress\">{codePointString}</p>\n            <p className=\"Status\">Code Points</p>\n          </div>\n      }\n      {\n        utf8String &&\n          <div className=\"IPEntry\">\n            <p className=\"IPAddress\">{utf8String}</p>\n            <p className=\"Status\">UTF-8 String</p>\n          </div>\n      }\n    </div>\n  );\n}\n\n/**\n *\n * @param {string} text\n * @returns {[number, number, number, number]}\n */\nfunction parseIPv4 (text) {\n  if (typeof text !== \"string\") return null;\n\n  const parts = text.split(\".\");\n\n  if (parts.length !== 4) return null;\n\n  const bytes = parts.map(p => parseInt(p));\n\n  if (!bytes.every(b => b >= 0 && b < 256)) return null;\n\n  return bytes;\n}","import { useState } from 'react';\nimport './App.css';\nimport ForwardApp from './ForwardApp';\nimport ReverseApp from './ReverseApp';\n\nfunction App() {\n  const [ mode, setMode ] = useState(\"forward\");\n\n  if (mode === \"forward\") {\n    return (\n      <div>\n        <ForwardApp />\n        <button className=\"ModeButton\" onClick={() => setMode(\"reverse\")}>IPv4 to Text</button>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <ReverseApp />\n        <button className=\"ModeButton\" onClick={() => setMode(\"forward\")}>Text to IPv4</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}