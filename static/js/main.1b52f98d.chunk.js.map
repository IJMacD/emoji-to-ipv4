{"version":3,"sources":["address.js","ByteList.js","ForwardApp.js","ReverseApp.js","App.js","index.js"],"names":["list","require","ByteList","bytes","byteString","style","map","c","charCodeAt","className","b","toString","padStart","join","ForwardApp","useState","input","setInput","utf8Bytes","utf8","encode","ipList","length","match","s","padEnd","value","onChange","e","target","placeholder","marginTop","marginLeft","ip","i","ipv4","assignment","byte","prefix","find","item","Prefix","findAssignment","Status","Designation","href","rel","ReverseApp","useEffect","fetch","then","r","json","d","text","parts","split","p","parseInt","every","parseIPv4","isValid","codePointString","String","fromCodePoint","utf8String","decode","CodePointList","codePoints","codePointAt","toUpperCase","App","mode","setMode","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b52f98d.chunk.js","sourcesContent":["const list = require('./ipv4-address-space.json');\r\n\r\n/**\r\n *\r\n * @param {number} byte\r\n */\r\nexport function findAssignment (byte) {\r\n    const prefix = `${byte.toString().padStart(3,\"0\")}/8`;\r\n\r\n    return list.find(item => item.Prefix === prefix);\r\n}","/**\r\n *\r\n * @param {object} props\r\n * @param {number[]} [props.bytes]\r\n * @param {string} [props.byteString]\r\n * @param {import(\"react\").CSSProperties} [props.style]\r\n * @returns\r\n */\r\nexport default function ByteList ({ bytes = null, byteString = null, style = null }) {\r\n    if (bytes === null) {\r\n        if (byteString === null) {\r\n            return null;\r\n        }\r\n\r\n        bytes = [...byteString].map(c => c.charCodeAt(0));\r\n    }\r\n\r\n    return <p className=\"ByteList\" style={style}>{bytes.map(b => b.toString(16).padStart(2, \"0\")).join(\" \")}</p>;\r\n}","import { useState } from 'react';\nimport utf8 from 'utf8';\nimport './App.css';\nimport { findAssignment } from './address';\nimport ByteList from './ByteList';\n\nexport default function ForwardApp() {\n  const [ input, setInput ] = useState(\"\");\n\n  const utf8Bytes = utf8.encode(input);\n\n  let ipList = input.length > 0 ? utf8Bytes.match(/.{1,4}/g).map(s => [...s.padEnd(4,\"\\0\")].map(c => c.charCodeAt(0))) : [];\n\n  return (\n    <div className=\"App\">\n      <input className=\"EmojiInput\" value={input} onChange={e => setInput(e.target.value)} placeholder=\"Enter some characters\" />\n      <ByteList byteString={utf8Bytes} style={{ marginTop: \"-2em\", marginLeft: \"2rem\" }} />\n      {\n        ipList.map((ip, i) => {\n          const ipv4 = `${ip[0]}.${ip[1]}.${ip[2]}.${ip[3]}`;\n          const assignment = findAssignment(ip[0]);\n\n          return (\n            <div key={i} className=\"IPEntry\">\n              <p className=\"IPAddress\">{ipv4}</p>\n              <p className=\"Status\">{assignment.Status} - {assignment.Designation}</p>\n              <p className=\"Lookup\"><a href={`https://db-ip.com/${ipv4}`} target=\"_blank\" rel=\"noreferrer\">Lookup</a></p>\n            </div>\n          );\n        })\n      }\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport utf8 from 'utf8';\nimport './App.css';\nimport ByteList from './ByteList';\n\nexport default function ReverseApp() {\n  const [ input, setInput ] = useState(\"\");\n\n  useEffect(() => {\n    fetch(`https://freegeoip.app/json/`).then(r => r.json()).then(d => {\n      setInput(input => {\n        if (input === \"\") {\n          return d.ip;\n        }\n        return input;\n      });\n    });\n  }, []);\n\n  const bytes = parseIPv4(input);\n\n  const isValid = bytes !== null;\n\n  const codePointString = isValid && String.fromCodePoint(...bytes);\n\n  let utf8String = null;\n\n  if (isValid) {\n    try {\n      utf8String = utf8.decode(codePointString);\n    } catch (e) {}\n  }\n\n  return (\n    <div className=\"App\">\n      <input className=\"EmojiInput\" value={input} onChange={e => setInput(e.target.value)} placeholder=\"Enter an IPv4 address\" />\n      {\n        codePointString &&\n          <div className=\"IPEntry\">\n            <p className=\"IPAddress\">{codePointString}</p>\n            <p className=\"Status\">Code Points</p>\n            <CodePointList codePoints={bytes} />\n          </div>\n      }\n      {\n        utf8String &&\n          <div className=\"IPEntry\">\n            <p className=\"IPAddress\">{utf8String}</p>\n            <p className=\"Status\">UTF-8 String</p>\n            <ByteList byteString={codePointString} />\n            <CodePointList codePoints={[...utf8String].map(c => c.codePointAt(0))} />\n          </div>\n      }\n    </div>\n  );\n}\n\n/**\n *\n * @param {string} text\n * @returns {[number, number, number, number]}\n */\nfunction parseIPv4 (text) {\n  if (typeof text !== \"string\") return null;\n\n  const parts = text.split(\".\");\n\n  if (parts.length !== 4) return null;\n\n  const bytes = parts.map(p => parseInt(p));\n\n  if (!bytes.every(b => b >= 0 && b < 256)) return null;\n\n  return bytes;\n}\n\n/**\n *\n * @param {object} props\n * @param {number[]} props.codePoints\n */\nfunction CodePointList ({ codePoints }) {\n  return <p className=\"ByteList\">{codePoints.map(b => `U+${b.toString(16).toUpperCase()}`).join(\" \")}</p>\n}","import { useState } from 'react';\nimport './App.css';\nimport ForwardApp from './ForwardApp';\nimport ReverseApp from './ReverseApp';\n\nfunction App() {\n  const [ mode, setMode ] = useState(\"forward\");\n\n  if (mode === \"forward\") {\n    return (\n      <div>\n        <ForwardApp />\n        <button className=\"ModeButton\" onClick={() => setMode(\"reverse\")}>IPv4 to Text</button>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <ReverseApp />\n        <button className=\"ModeButton\" onClick={() => setMode(\"forward\")}>Text to IPv4</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}